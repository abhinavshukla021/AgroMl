def Cotton_all_other():

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from array import *
from sklearn.model_selection import train_test_split
from sklearn.utils import shuffle
from sklearn.preprocessing import StandardScaler
from sklearn.svm import SVC
from sklearn.metrics import confusion_matrix
from sklearn.tree import DecisionTreeClassifier

import collections
import itertools

Rh1 = np.arange(80,100,0.1)
Rh4 = np.arange(80,100,0.1)
Rh6 = np.arange(85,100,0.1)
T1 = np.arange(28,32,0.1)
T4 = np.arange(20,30,0.1)
T6 = np.arange(30,40,0.1)



dict = { 0:'Fusarium Wilt', 1:'Root Rot', 2:'Anthracnose', 3:'Grey Mildew', 4:'Alternia Leaf Spot', 5:'Bacterial Blight'}
Stage = ['Branching', 'Flowering', 'Fruiting','Seedling', 'Stem Elongation']

df1 = pd.DataFrame(data=(list(itertools.product(Rh1,T1,[0]))),columns=['Rh', 'T', 'Disease'])
print(df1.shape)
df4 = pd.DataFrame(data=(list(itertools.product(Rh4,T4,[3]))),columns=['Rh', 'T',  'Disease'])
print(df4.shape)
df6 = pd.DataFrame(data=(list(itertools.product(Rh6,T6,[5]))),columns=['Rh', 'T',  'Disease'])
print(df6.shape)

df = df1.append(df4.append(df6, ignore_index=True),ignore_index=True)


features = ['Rh','T']
df = df.sample(frac=1).reset_index(drop = True)

x = df.loc[:,features].values
y = df.loc[:,['Disease']].values




l1 = ['Fusarium Wilt', 'Grey Mildew', 'Bacterial Blight' ]
colors = 'krbyc'
l = [0,3,5]
for i, color in zip(l, colors):
    idx = np.where(y == i)
    plt.scatter(x[idx, 0], x[idx, 1], c=color, edgecolor='black', cmap=plt.cm.Paired, s=20)

    
plt.xlabel('Rh')
plt.ylabel('T')
plt.title('Variation of Diseases with Temperature and Relative Humidity')
plt.legend(l1)


x_tr, x_te, y_tr, y_te = train_test_split(x,y,test_size=0.1) 
x_de, x_te, y_de, y_te = train_test_split(x_te,y_te, test_size=0.5)

clf1 = SVC(probability=True).fit(x_tr,y_tr)
print(clf1.score(x_tr,y_tr.astype('int')))
print(clf1.score(x_de,y_de.astype('int')))
print(clf1.score(x_te,y_te.astype('int')))

# print(confusion_matrix(clf1.predict(x_te),y_te.astype('int')))

return clf1
